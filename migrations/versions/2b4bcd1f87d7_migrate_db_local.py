"""Migrate DB local

Revision ID: 2b4bcd1f87d7
Revises: 
Create Date: 2024-01-07 18:52:36.413818

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2b4bcd1f87d7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPEND', name='enumstatus'), server_default='ACTIVE', nullable=True),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('deleted_on', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default='', nullable=True),
    sa.Column('deleted_by', sa.String(length=50), server_default='', nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default='', nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('FALSE'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPEND', name='enumstatus'), server_default='ACTIVE', nullable=True),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('deleted_on', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default='', nullable=True),
    sa.Column('deleted_by', sa.String(length=50), server_default='', nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default='', nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('FALSE'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shared_notes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('note_id', sa.UUID(), nullable=False),
    sa.Column('shared_with_user_id', sa.UUID(), nullable=False),
    sa.Column('shared_by_user_id', sa.UUID(), nullable=False),
    sa.Column('shared_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPEND', name='enumstatus'), server_default='ACTIVE', nullable=True),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('deleted_on', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default='', nullable=True),
    sa.Column('deleted_by', sa.String(length=50), server_default='', nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default='', nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('FALSE'), nullable=True),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['shared_by_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['shared_with_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shared_notes')
    op.drop_table('notes')
    op.drop_table('users')
    # ### end Alembic commands ###
